<script>
  import { animate, timeline, spring } from 'motion';
  import throttle from 'lodash.throttle';

  const cat = document.querySelector('#cat') as HTMLElement;
  const catBackground = document.querySelector('#catBackground') as HTMLElement;
  const catBorder = document.querySelector('#catBorder') as HTMLElement;
  const TIMING_MOUSE_FOLLOW = 50 / 1000; //sec

  function followCursor(e: MouseEvent) {
    const screenWidth = document.documentElement.clientWidth / 2;
    const screenHeight = document.documentElement.clientHeight / 2;
    const centerX = e.clientX - screenWidth;
    const centerY = screenHeight - e.clientY;
    const degX = Math.min(20, Math.max(-20, centerY * 0.05));
    const degY = Math.min(28, Math.max(-28, centerX * 0.05));
    animate(cat, { rotateX: degX, rotateY: degY }, { duration: TIMING_MOUSE_FOLLOW });
    animate(catBorder, { rotateX: degX * 0.8, rotateY: degY * 0.8 }, { duration: TIMING_MOUSE_FOLLOW });
  }

  const followCursorThrottle = throttle(followCursor, TIMING_MOUSE_FOLLOW * 1000);

  timeline([
    [
      '#cat',
      { opacity: [0, 1], scaleX: [10, 1] },
      {
        opacity: { easing: 'linear', duration: 1 },
        scaleX: { easing: spring({ stiffness: 72 }), duration: 1 }
      }
    ],
    [
      '#header-card',
      { opacity: [0, 1], scaleX: [10, 1], scaleY: [0.1, 1] },
      {
        opacity: { easing: 'linear', duration: 1 },
        scaleX: { easing: spring({ stiffness: 72 }), duration: 1 },
        scaleY: { easing: spring({ stiffness: 10 }), duration: 0.5 },
        at: '-1'
      }
    ],
    ['#header-card-hello', { opacity: [0, 1] }, { duration: 2, at: '-1.5' }],
    ['#header-card-mynameis', { opacity: [0, 1], height: [0, '28px'] }, { height: { easing: spring({ stiffness: 80 }) }, duration: 2, at: '-1' }],
    ['#header-card-cub', { height: [0, '128px'] }, { height: { easing: spring({ velocity: 100, damping: 6 }), duration: 5 }, at: '-2' }],
    ['#mask-c-path', { strokeDashoffset: ['60px', 0] }, { easing: 'ease-out', duration: 1, at: '-1' }],
    ['#mask-u-path', { strokeDashoffset: ['60px', 0] }, { easing: 'ease-out', duration: 1.2, at: '-0.3' }],
    ['#mask-b1-path', { strokeDashoffset: ['60px', 0] }, { easing: 'ease-out', duration: 0.8, at: '-0.3' }],
    ['#mask-b2-path', { strokeDashoffset: ['60px', 0] }, { easing: 'ease-out', duration: 1, at: '-0.3' }]
  ]);

  document.addEventListener('mousemove', followCursorThrottle);

  function cleanCatClone(cc: HTMLElement) {
    cc.removeAttribute('aria-label');
    cc.removeAttribute('style');
    cc.classList.remove('mb-3', 'relative');
    cc.classList.add('absolute', 'w-full', 'h-full', 'pointer-events-none');
    Array.from(cc.children).forEach((child) => child.removeAttribute('id'));
  }

  const catCloneBehind = cat.cloneNode(true) as HTMLElement;
  catCloneBehind.setAttribute('id', 'catCloneBehind');
  cleanCatClone(catCloneBehind);
  const catCloneHover = cat.cloneNode(true) as HTMLElement;
  catCloneHover.setAttribute('id', 'catCloneHover');
  cleanCatClone(catCloneHover);

  animeCat(catCloneBehind, 0.5, 0.3, 0.6);
  animeCat(catCloneHover, 0.3, 0.2, 1);
  cat.insertBefore(catCloneBehind, catBackground);
  cat.insertBefore(catCloneHover, catBorder);

  function animeCat(cat: HTMLElement, opacityMax: number, scaleMax: number, duration: number) {
    const opacity = 0.1 + Math.random() * opacityMax;
    const scaleX = 0.95 + Math.random() * scaleMax;
    const scaleY = 0.9 + Math.random() * scaleMax;
    const y1 = Math.random() * 95;
    const y2 = y1 + Math.random() * (100 - y1);
    animate(
      cat,
      {
        opacity: opacity,
        transform: `scaleX(${scaleX}) scaleY(${scaleY})`,
        clipPath: `polygon(0% ${y1}%,100% ${y1}%,100% ${y2}%,0% ${y2}%)`
      },
      { duration, easing: 'linear' }
    );
  }
  setInterval(() => {
    animeCat(catCloneBehind, 0.5, 0.3, 0.6);
  }, 600);
  setInterval(() => {
    animeCat(catCloneHover, 0.3, 0.2, 1);
  }, 1000);
</script>

<style>
  header {
    perspective: 512px;
  }
</style>

<div class="flex min-h-screen justify-center items-center overflow-x-hidden mb-60">
  <header class="max-w-lg mx-auto w-[500px] relative">
    <div
      class="relative aspect-[500/365] mb-3"
      aria-label="Stylized visage of a cat in black and white"
      role="img"
      id="cat"
      style="opacity: 0;"
    >
      <img
        id="catBackground"
        class="absolute top-0 left-0 w-full"
        src="/img/logo_fond.svg"
        alt=""
      />
      <img
        id="catBorder"
        class="absolute top-0 left-0 w-full"
        alt=""
        src="/img/logo_contour.svg"
      />
    </div>

    <h1
      id="header-card"
      class="bg-black border-y border-neutral-400 rounded-xl shadow-lg overflow-hidden"
    >
      <div class="bg-white text-center text-black p-3">
        <div
          id="header-card-hello"
          class="font-cursive text-4xl"
        >
          Hello
        </div>
        <div
          id="header-card-mynameis"
          class="text-xl -mt-3"
        >
          my name is
        </div>
      </div>
      <div
        id="header-card-cub"
        class="flex items-center justify-center overflow-hidden"
      >
        <svg
          class="h-20 w-auto"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 68.9 33.8"
          role="img"
          aria-labelledby="title-cub"
        >
          <title id="title-cub">cub</title>
          <path
            mask="url(#mask-b2)"
            id="letter-b2"
            fill="#fff"
            d="M50 16.5c0 .5.1.7.4.7l.5-.4c2.4-3.2 5.3-4.8 8.6-4.8 1.2 0 2.4.3 3.5.8 1 .6 2 1.3 2.8 2.3a12.2 12.2 0 0 1 1.9 11.4c-.5 1.2-1 2.2-1.8 3-.8.9-1.7 1.6-2.8 2-1 .6-2.2.8-3.5.8-1.5 0-3-.3-4.6-.9-1.4-.6-2.9-1.4-4.2-2.5a.7.7 0 0 0-.4-.2c-.3 0-.5.2-.6.4-1.8-2.2-2.2-8.2.2-12.6zm8.6.1c-.6 0-1.3.2-2 .5-.6.3-1.2.7-1.8 1.3-.6.6-1.1 1.2-1.6 2a13 13 0 0 0-1.3 3.1c0 .3 0 .5.3.7a25 25 0 0 0 3.7 2.6l1.9.8a6 6 0 0 0 1.7.2c1.2 0 2.1-.3 2.7-1 .6-.7 1-1.7 1-3 0-1-.2-2-.4-2.9a8 8 0 0 0-1-2.2c-.3-.7-.8-1.2-1.4-1.5-.5-.4-1.1-.6-1.8-.6z"
          ></path>
          <mask id="mask-b2">
            <path
              id="mask-b2-path"
              stroke-dasharray="60"
              fill="none"
              stroke="#fff"
              stroke-width="6.5"
              d="M48.2 27c-.4-4.1 7.5-14 12.1-12.7 6.3 1.8 6 10.9 3.8 13.4-2.6 3-5.3 3.2-13.8-1.7"
            ></path>
          </mask>
          <path
            mask="url(#mask-b1)"
            id="letter-b1"
            fill="#fff"
            d="M45.8 27.7l-1.1-11.5a118 118 0 0 0-1.8-11.8v-.3c0-.4 0-.7.2-1l.7-.7.8-.4a4 4 0 0 1 1.1-.2c1 0 1.7.5 2.1 1.4l.5 2a67.5 67.5 0 0 1 1.1 7l.6 4.3c.7 6.5.6 11.9-.2 12.6a2 2 0 0 1-.9.6l-1 .1c-1.4 0-2-.7-2.1-2z"
          ></path>
          <mask id="mask-b1">
            <path
              id="mask-b1-path"
              stroke-dasharray="60"
              fill="none"
              stroke="#fff"
              stroke-width="8"
              d="M44.9.9C48 15 48.5 25 48 31"
            ></path>
          </mask>
          <path
            mask="url(#mask-u)"
            id="letter-u"
            fill="#fff"
            d="M26.2 21q0 3.3 1 5.1t3 1.8q1.2 0 2.2-.7 1-.7 1.8-2 .7-1.3 1.1-3 .4-1.8.4-4v-2.1l-.3-1.7q0-.7-.2-1.3v-1q0-.9.6-1.2.7-.4 2.1-.4 1.9 0 2.9.8 1 .9 1 2.5 0 4.4-.8 7.9-.9 3.5-2.5 6-1.6 2.4-3.8 3.7t-5.2 1.3q-2 0-3.7-.8-1.7-.9-2.9-2.3-1.2-1.6-2-3.6-.6-2.1-.6-4.6v-2l.2-2.3.2-2.7.4-3q0-.8.7-1.2.6-.5 1.5-.5t1.6.2q.8.2 1.3.5t.8.7q.4.4.4.8t-.2 1.4l-.4 2.2-.4 2.7-.2 2.8z"
          ></path>
          <mask id="mask-u">
            <path
              id="mask-u-path"
              stroke-dasharray="60"
              fill="none"
              stroke="#fff"
              stroke-width="8"
              d="M24.7 8.4c-1.1 10-3 20.7 4.2 21.4 9 1 10-12.7 9.6-20.3"
            ></path>
          </mask>
          <path
            mask="url(#mask-c)"
            id="letter-c"
            fill="#fff"
            d="M10.9 9.3q1.3 0 2.5.4 1.2.3 2.1 1 1 .6 1.5 1.4.6.8.6 1.7l-.2 1-.6 1-.8.5q-.5.3-1 .3-.6 0-1-.5-.6-.4-1.1-1l-1.2-.9q-.6-.4-1.6-.4-.8 0-1.6.4-.7.4-1.2 1.2-.5.7-.7 1.8-.3 1-.3 2.2 0 3.5 1.3 5.3 1.4 1.8 3.8 1.8 1.2 0 2-.4.8-.3 1.5-.8l1.1-.8q.5-.4 1-.4.4 0 .7.2l.5.5.4.6.2.7q0 .8-.8 1.7-.8.9-2.1 1.6-1.3.7-2.8 1.1-1.6.5-3 .5-2 0-3.6-.8-1.7-.7-2.9-2-1.1-1.4-1.8-3.3-.7-2-.7-4.2 0-2.5.8-4.6.7-2 2-3.6Q5.2 11 7 10.2q1.8-1 3.9-1z"
          ></path>
          <mask id="mask-c">
            <path
              id="mask-c-path"
              stroke-dasharray="60"
              fill="none"
              stroke="#fff"
              stroke-width="8"
              d="M17.3 16.8c-4.6-6.2-8.1-6.5-11.2-2.9-3.1 3.6-3 12 1.5 14 4.4 2.2 8.2-1.3 12.3-3"
            ></path>
          </mask>
        </svg>
      </div>
    </h1>
  </header>
</div>
